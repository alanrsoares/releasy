// Generated by CoffeeScript 1.6.3
(function() {
  var releasy, semver, should, steps, testpkg, testpkgbeta;

  should = require('should');

  releasy = require('../releasy.js');

  steps = require('../libs/steps.js');

  semver = require('semver');

  testpkg = require('../testpackage.json');

  testpkgbeta = require('../testpackagebeta.json');

  describe('steps', function() {
    return it('should exist', function(done) {
      steps.should.be.ok;
      return done();
    });
  });

  describe('releasy', function() {
    return it('should exist', function(done) {
      releasy.should.be.ok;
      return done();
    });
  });

  describe('pkg.version', function() {
    return it('should not be promoted and steps.setup should throw error', function(done) {
      (function() {
        return steps.setup('testpackage.json', 'promote', '');
      }).should["throw"]();
      return done();
    });
  });

  describe('pkg.version', function() {
    return it('should not cause steps.setup to throw error', function(done) {
      testpkg.version = testpkg.version + '-beta';
      (function() {
        return steps.setup('testpackage.json', 'promote', '');
      }).should.not["throw"]();
      testpkg.version = testpkg.version.replace('-beta', '');
      return done();
    });
  });

  describe('pkg.version', function() {
    return it('should be promoted', function(done) {
      steps.setup('testpackagebeta.json', 'promote', '');
      testpkgbeta.version.should.equal('1.0.0-beta');
      return done();
    });
  });

  describe('steps.setup', function() {
    return it('should only increment if other types are given as parameter', function(done) {
      steps.setup('testpackage.json', '', '');
      newVersion.should.equal('1.0.1');
      return done();
    });
  });

}).call(this);

/*
//@ sourceMappingURL=test.map
*/
